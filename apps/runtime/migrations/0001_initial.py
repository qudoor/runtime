# Generated by Django 3.2.12 on 2023-02-24 11:01

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CredentialModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('private_key', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=255, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_credential',
            },
        ),
        migrations.CreateModel(
            name='HostModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='主机名称')),
                ('memory', models.IntegerField(blank=True, null=True, verbose_name='内存值')),
                ('cpu_core', models.IntegerField(blank=True, null=True, verbose_name='cpu数量')),
                ('os', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统')),
                ('os_version', models.CharField(blank=True, max_length=64, null=True, verbose_name='系统版本')),
                ('gpu_num', models.IntegerField(blank=True, null=True, verbose_name='GPU数量')),
                ('gpu_info', models.CharField(blank=True, max_length=128, null=True, verbose_name='GPU信息')),
                ('ip', models.CharField(max_length=128, unique=True, verbose_name='ip信息')),
                ('flex_ip', models.CharField(blank=True, max_length=128, null=True, verbose_name='弹性ip')),
                ('port', models.CharField(blank=True, max_length=64, null=True, verbose_name='服务器端口')),
                ('credential_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='密钥id')),
                ('status', models.CharField(blank=True, max_length=64, null=True, verbose_name='运行状态')),
                ('message', models.TextField(blank=True, null=True, verbose_name='信息')),
                ('has_gpu', models.BooleanField(blank=True, null=True, verbose_name='是否有GPU')),
                ('architecture', models.CharField(blank=True, max_length=255, null=True, verbose_name='系统架构')),
            ],
            options={
                'db_table': 'qupot_runtime_host',
            },
        ),
        migrations.CreateModel(
            name='KoModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('url', models.CharField(max_length=255, unique=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_ko',
            },
        ),
        migrations.CreateModel(
            name='LogModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('log_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_log',
            },
        ),
        migrations.CreateModel(
            name='NtpServerModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('status', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_ntp_server',
            },
        ),
        migrations.CreateModel(
            name='RuntimeAppModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('spec', models.JSONField(blank=True, null=True, verbose_name='quprouduct spec')),
            ],
            options={
                'db_table': 'qupot_runtime_app',
            },
        ),
        migrations.CreateModel(
            name='TaskRegistryModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('hostname', models.CharField(blank=True, max_length=255, null=True)),
                ('protocol', models.CharField(blank=True, max_length=255, null=True)),
                ('architecture', models.CharField(blank=True, max_length=255, null=True)),
                ('registry_hosted_port', models.IntegerField(blank=True, null=True)),
                ('nexus_user', models.CharField(blank=True, max_length=255, null=True)),
                ('nexus_password', models.CharField(blank=True, max_length=255, null=True)),
                ('registry_port', models.IntegerField(blank=True, null=True)),
                ('repo_port', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_task_registry',
            },
        ),
        migrations.CreateModel(
            name='TaskSpecModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('version', models.CharField(blank=True, max_length=255, null=True)),
                ('architectures', models.CharField(blank=True, max_length=255, null=True)),
                ('master_host_ids', models.JSONField(blank=True, max_length=255, null=True)),
                ('slave_host_ids', models.JSONField(blank=True, max_length=255, null=True)),
                ('max_node_num', models.IntegerField(blank=True, null=True)),
                ('upgrade_version', models.CharField(blank=True, max_length=255, null=True)),
                ('yum_operate', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_task_spec',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusConditionModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('task_status_id', models.CharField(blank=True, max_length=64, null=True)),
                ('task_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='所属taskmodel的id')),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('order_num', models.IntegerField(blank=True, null=True)),
                ('last_probe_time', models.DateTimeField(blank=True, null=True, verbose_name='上次查看时间')),
            ],
            options={
                'db_table': 'qupot_runtime_task_status_conditions',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('message', models.TextField(blank=True, null=True, verbose_name='信息')),
                ('node_cluster_id', models.CharField(blank=True, max_length=64, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_status', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'qupot_runtime_task_status',
            },
        ),
        migrations.CreateModel(
            name='TaskNodeModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('task_id', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('status_id', models.CharField(blank=True, max_length=255, null=True)),
                ('pre_status', models.CharField(max_length=255)),
                ('message', models.TextField(blank=True, null=True)),
                ('dirty', models.IntegerField(blank=True, null=True)),
                ('env_group_ids', models.CharField(blank=True, max_length=255, null=True)),
                ('host', models.ManyToManyField(blank=True, db_constraint=False, to='runtime.HostModel')),
            ],
            options={
                'db_table': 'qupot_runtime_task_node',
            },
        ),
        migrations.CreateModel(
            name='TaskModel',
            fields=[
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='自定义id')),
                ('name', models.CharField(max_length=255, null=True, unique=True)),
                ('quproduct', models.CharField(max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('plan_id', models.CharField(blank=True, max_length=255, null=True)),
                ('log_id', models.CharField(blank=True, max_length=255, null=True)),
                ('dirty', models.IntegerField(blank=True, null=True)),
                ('spec', models.OneToOneField(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runtime_task_spec', to='runtime.taskspecmodel')),
                ('status', models.OneToOneField(db_constraint=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='runtime_task_status', to='runtime.taskstatusmodel')),
            ],
            options={
                'db_table': 'qupot_runtime_task',
            },
        ),
    ]
